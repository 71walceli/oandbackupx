package com.machiav3lli.backup.tasks

import android.content.Context
import com.machiav3lli.backup.Constants
import com.machiav3lli.backup.activities.SchedulerActivityX
import com.machiav3lli.backup.items.SchedulerItemX
import com.machiav3lli.backup.schedules.db.Schedule
import com.machiav3lli.backup.schedules.db.ScheduleDatabase
import java.lang.ref.WeakReference

class AddScheduleTask(scheduler: SchedulerActivityX)
    : CoroutinesAsyncTask<Void?, Void?, SchedulerActivityX.ResultHolder<Schedule>>() {
    private val activityReference: WeakReference<SchedulerActivityX> = WeakReference(scheduler)
    override val TAG = Constants.classTag(".AddScheduleTask")

    override fun doInBackground(vararg params: Void?): SchedulerActivityX.ResultHolder<Schedule>? {
        val scheduler = activityReference.get()
        return if (scheduler == null || scheduler.isFinishing) SchedulerActivityX.ResultHolder()
        else SchedulerActivityX.ResultHolder(insertNewSchedule(scheduler))
    }

    override fun onPostExecute(result: SchedulerActivityX.ResultHolder<Schedule>?) {
        val scheduler = activityReference.get()
        if (scheduler != null && !scheduler.isFinishing && result?.artifact != null) {
            scheduler.list!!.add(SchedulerItemX(result.artifact))
        }
    }

    private fun insertNewSchedule(context: Context): Schedule {
        val schedule = Schedule.Builder() // Set id to 0 to make the database generate a new id
                .withId(0)
                .build()
        val scheduleDatabase = ScheduleDatabase.getInstance(context, SchedulerActivityX.DATABASE_NAME)
        val scheduleDao = scheduleDatabase.scheduleDao
        val ids = scheduleDao.insert(schedule)
        // update schedule id with one generated by the database
        schedule.id = ids!![0]
        return schedule
    }
}